# -*- coding: utf-8 -*-
"""Data Science Job Salary.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lLT30qKghdA3ZNCjQzp2slvpAn8RodLS

#Data Science Job Salary

This project aims to provide a comprehensive investigation of the data science job landscape focusing on depicting the most lucrative jobs available along with the demography.

The main business question I aim to answer is: **“Where in the world can potential entrants in the data science field find the most financially rewarding opportunities and which factor influences these variations?”**

# **Importing all necessary libraries**
"""

#data manipulation
import pandas as pd
import numpy as np

#visualization
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go
import plotly.io as pio

#country converter
!pip install country_converter
import country_converter as coco

#importing dataframe from google drive
path = "/content/drive/MyDrive/Colab Notebooks/Assignment/ds_salaries.csv"
df = pd.read_csv(path)

"""# **Data Information**
We check the shape of the dataset and get a snip of the first few rows of the dataset and afterwards conduct basic statistical analysis with the describe function.

##Explore the data
"""

df.head()

print(df.shape)

"""##Data Understanding"""

df.describe()

"""Our only variable of interest is salary_in_usd since we will be using this variable against other variables for analysis."""

df.info()

"""### Data Dictionary:

*   work_year: The year the salary was paid.
*   experience_level: The level of experience at the particular job. 5 possible values- EN Entry-level / Junior MI Mid-level / Intermediate SE Senior-level / Expert EX Executive-level / Director
*   employment_type: type of employment for the given role- PT Part-time FT Full-time CT Contract FL Freelance
*   salary: Gross salary paid
*   salary_currency: The currency the salary was paid as per ISO 4217 currency code.
*   salaryinusd: The salary converted to USD (FX rate divided by avg. USD rate for the respective year via fxdata.foorilla.com)
*   employee_residence: Employee's primary country of residence in during the work year as an ISO 3166 country code.
*   remote_ratio: The overall amount of work done remotely, possible values are as follows: 0 No remote work (less than 20%) 50 Partially remote 100 Fully remote (more than 80%)
*   company_location: The country of the employer's main office or contracting branch as an ISO 3166 country code.
*   company_size: The average number of people that worked for the company during the year: S less than 50 employees (small) M 50 to 250 employees (medium) L more than 250 employees (large)

We can see that there are 607 rows and 12 columns. However, we do not need Unnamed:0, salary and salary_currency variables. We will be using salary_in_usd for all our analysis since it represents all the salaries from different countries under on homogeneous and comparable currency.

#**Data Preprocessing**

##Drop Unnecessary Columns
"""

df.drop(df[['Unnamed: 0','salary', 'salary_currency']], axis=1, inplace=True)

df.head()

"""We now have a dataset with the necessary variables for analysis.

##Check Missing Values
"""

df.isnull().sum()

"""There are no missing values in the dataframe.

##Check for Duplicates
"""

duplicates = df.duplicated(keep='first')
num_duplicates = duplicates.sum()
print(f"Number of duplicate rows: {num_duplicates}")

"""There are 42 duplicated rows, but the observations may not be duplicate in real life. There is a good possiblity that the duplicates may indicate individuals working for the same company at the same level and position, thus earning the same income. And since it's merely 6% of the total data, we can ignore it and include it in our analysis.

##Check for Outliers
"""

fig=px.box(df,y="salary_in_usd", points='all')
fig.show()

"""It is seen that there are some datapoints above the upper bound but it will not be in our interest to remove these datapoints because we want to investigate which combination of conditions pay such high salary. Therefore we will include them in our analysis but have a preliminary idea that there are jobs that pay well above the upper quartile.

##Replace Values

Values will be replaced for better understanding of the dataframe.

For remote_ratio, we will do the following:


*   0 --> On-Site
*   50 --> Hybrid
*   100 --> Remote

For experience_level, we will do the following:
*   EN --> Entry
* MI --> Mid
* SS --> Senior
* EX --> Executive

For company_size, we will do the following:
* S --> Small
* M --> Medium
* L --> Large

For employment_type, we will do the following:
* PT --> Part Time
* FT --> Full Time
* CT --> Contractual
* FL --> Freelance

Country converter converts the abbreviated country names to expanded form.
"""

#replacing values for better understanding
df.remote_ratio.replace([0,50,100],['On-Site','Hybrid','Remote'], inplace=True)
df.experience_level.replace(['EN','MI','SE', 'EX'], ['Entry', 'Mid', 'Senior', 'Executive'], inplace = True)
df.company_size.replace(["S","M","L"],['Small','Medium','Large'], inplace=True)
df.employment_type.replace(['PT','FT','CT', 'FL'], ['Part Time', 'Full Time', 'Contractual', 'Freelance'], inplace = True)

#using country converter to convert country abbreviations to full form
df["employee_residence"] = coco.convert(names=df["employee_residence"], to="name")
df["company_location"] = coco.convert(names=df["company_location"], to="name")

df.head()

"""#**Data Visualization**

##Univariate Analysis

### Year
"""

fig = df['work_year'].value_counts()
plt.figure(figsize=(8, 4))
plt.title("Work Year Distribution")

ax = sns.barplot(x=fig.index, y=fig.values, palette="Set2")

plt.show()

"""From the bar chart it is seen that the majority of the observations is from 2022 (>50%). About 1/3 of the observations are from 2021 and the rest are from 2022. This increasing trend in observations might indicate an incrase in data science jobs over the years.

###Salary
"""

sns.histplot(df["salary_in_usd"], kde=True, color = '#1F6357')

plt.title("Data Science Salary Distribution")

plt.xlabel("Salary in USD")
plt.ylabel("Count")

"""From the histogram above, it is seen that the median salary is around 100,000 and only a very few individuals make above 300,000 which are considered as outliers already seen from the box plot.

### Job Roles
"""

z = df['job_title'].value_counts().head(10)
plt.figure(figsize=(12, 6))

ax = sns.barplot(x=z.index, y=z.values, palette="tab20")

ax.set(xlabel='Job Title', ylabel='Count')
ax.set_title("Top 10 Popular Data Science Roles")

plt.xticks(rotation=45, ha='right', fontsize =7)

plt.show()

"""From the bar chart it is seen that the most popular data science roles include Data Scientists and Data Engineers followed by Data Analysts. Therefore the data science market is dominated mainly by these top three jobs roles.

### Employment Type
"""

employment_type_counts = df['employment_type'].value_counts().reset_index()
employment_type_counts.columns = ['Employment Type', 'Count']

fig = px.bar(employment_type_counts, x='Employment Type', y='Count',
             color='Employment Type', text='Count',
             title='Employment Type Distribution',
             color_discrete_sequence=px.colors.qualitative.Pastel)

fig.show()

"""The bar chart shows that the majority of the sample size is Full-Time Employed individuals. 588 out of 607 observations are for Full Time employees and the remaining 19 observations are spread out between Part Time, Contractual and Freelance.

### Employee Residence
"""

#assigning a variable top_location for funnel chart
top_locations = df.groupby('company_location', as_index=False)['experience_level'].count().sort_values(by='experience_level', ascending=False).head(10)

fig = px.funnel(top_locations, y='company_location', x='experience_level',
                color_discrete_sequence=px.colors.qualitative.Pastel,
                template='ggplot2',
                title='Top 10 Countries with the Most Data Science Jobs')

fig.update_layout(yaxis_title='Company Location')

fig.show()

"""From the Funnel Chart above, it is seen that majority of the observations are from North America (USA and Canada). The UK holds the second most observations. India is the top location for Data Science roles in Asia.

### Experience Level
"""

#create a new variable to count the categorical values in the experience_level column
experience_counts = df['experience_level'].value_counts().reset_index()
experience_counts.columns = ['Experience Level', 'Count']

plt.figure(figsize=(7, 7))

plt.pie(experience_counts['Count'], labels=experience_counts['Experience Level'],
        autopct='%1.1f%%', startangle=120, colors=sns.color_palette("tab20"))

plt.title("Experience Level Distribution", y=-0.01)

plt.show()

"""From the pie chart it is seen that Senior-level employees are highest in the dataset following by the mid-level employees. The proportion of the junior-level and executives are fairly low.

### Remote Ratio
"""

remote_ratio_counts = df['remote_ratio'].value_counts().reset_index()
remote_ratio_counts.columns = ['Remote Ratio', 'Count']

sns.set(style="whitegrid")
ax = sns.barplot(x='Count', y='Remote Ratio', data=remote_ratio_counts, palette='tab20')
plt.xlabel("Count")
plt.ylabel("Remote Ratio")
plt.title("Remote Ratio Distribution")

plt.show()

"""The horizontal bar chart shows that Remote jobs are the most popular for the data science jobs. On-site and hybrid mode of work are almost equal in proportion. This may be due to the global pandemic which boosted the work from home culture for these types of roles.

## Multivariate Analysis

### Work Year and Salary
"""

avg_salary_work_year = df.groupby('work_year')['salary_in_usd'].mean().reset_index()
avg_salary_work_year.columns = ['Work Year', 'Average Salary (USD)']
avg_salary_work_year = avg_salary_work_year.sort_values(by='Work Year')

print(avg_salary_work_year)

sns.set(style="whitegrid")
plt.figure(figsize=(8, 4))

ax = sns.barplot(x='Work Year', y='Average Salary (USD)', data=avg_salary_work_year, palette='tab20')


plt.xlabel("Work Year")
plt.ylabel("Average Salary (USD)")
plt.title("Average Salary by Work Year")


plt.show()

"""From the bar chart above it can be said that the average salary incrased on a yearly basis from 2020 to 2022 where the change was more prominent between 2021 and 2022.

### Experience Level and Salary Distribution
"""

sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))

sns.violinplot(x='experience_level', y='salary_in_usd', data=df, palette='tab20')

plt.xlabel("Experience Level")
plt.ylabel("Salary in USD")
plt.title("Salary Distribution by Experience Level")


plt.show()

"""From the Violin Chart above the following deductions can be made:

*   **Entry level** employees earn a median salary of about 50000 USD per annum.
*   **Mid level** employees earn a median salary of about 80,000 USD per annum.
* **Senior level**  employees earn a median salary of about 130,000 USD per annum.
*  **Executive level** employees earn a median salary of about 170,000 USD per annum and some executives earn more than other experienced level workers and the range of salary is also greater.

### Job Role and Salary Distribution for Top 10 and Bottom 10
"""

#finding top 10 salary earning job titles.
df_sorted = df.sort_values(by='salary_in_usd', ascending=False)
top_10_highest_salaries = df_sorted.head(10)

sns.set(style="whitegrid")
ax = sns.barplot(x='salary_in_usd', y='job_title', data=top_10_highest_salaries, palette='tab20')

plt.xlabel("Salary in USD")
plt.ylabel("Job Title")
plt.title("Top 10 Highest Salaries and Corresponding Job Titles")

plt.show()


#finding lowest 10 salaries earning job titles.
df_sorted = df.sort_values(by='salary_in_usd')
lowest_10_salaries = df_sorted.head(10)

sns.set(style="whitegrid")
ax = sns.barplot(x='salary_in_usd', y='job_title', data=lowest_10_salaries, palette='tab20')

plt.xlabel("Salary in USD")
plt.ylabel("Job Title")
plt.title("Lowest 10 Salaries and Corresponding Job Titles")

plt.show()

"""By looking at the charts of the top 10 salary earning roles and the bottom 10 earning roles, the discrepency looks a bit odd.The highest earning roles are Principal Data Engineer and Financial Data Analyst earning 600,000 USD and 450,000 USD respecitvely whereas the lowest earning roles like Product Data Analyst only earns about 6,000USD per annum which is quite low. This may be due to the location of the job which we will investigate next."""

top_10_highest_salaries = df.sort_values(by='salary_in_usd', ascending=False).head(10)
top_10_highest_salaries

bottom_10_lowest_salaries = df.sort_values(by='salary_in_usd').head(10)
bottom_10_lowest_salaries

"""By examining the associated data, it's evident that the highest-earning salary positions have employees residing in the USA, with the company also located in the USA. In contrast, a significant portion of employees in lower-earning roles reside in Asia, particularly India, where their companies are also situated. This suggests that the USA offers higher salaries to data science professionals compared to Asian countries, notably India. Let's explore this further.

### Company Location and Salary Distribution

To compute the average salary based on company location, the outliers should be removed at first to provide a fair analysis.
"""

#remove outliers to find average income by working_country

#function to remove outliers
def remove_outliers(data, column):
    Q1 = data[column].quantile(0.25)
    Q3 = data[column].quantile(0.75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    return data[(data[column] >= lower_bound) & (data[column] <= upper_bound)]

# Removing outliers from the 'salary_in_usd' column
df_no_outliers = remove_outliers(df, 'salary_in_usd')

print(df.shape)
print(df_no_outliers.shape)

#calculating average salary based on company_location using the dataframe without the outliers.

average_salary_by_country = df_no_outliers.groupby('company_location')['salary_in_usd'].mean().reset_index()
average_salary_by_country = average_salary_by_country.sort_values(by='salary_in_usd', ascending=False)

print(average_salary_by_country)

# Plotting a choropleth map to show the average salary distribution based on company location.

fig = px.choropleth(average_salary_by_country,
                    locations='company_location',
                    locationmode='country names',
                    color='salary_in_usd',
                    hover_name='company_location',
                    color_continuous_scale='Viridis',
                    title='Average Salary by Company Location')

fig.show()

"""Analyzing the geographical map reveals the salary distribution by company location. The highest average salary is observed in Russia, followed by the USA. Meanwhile, in several Asian regions, the average salary tends to be lower. Hovering over the map will display precise average salary values by location.

It's interesting to see Russia occupying the top spot in terms of average salary. Let's examine the observations where the company location is Russia.
"""

df_russia = df[df['company_location'] == "Russia"]
df_russia

"""There are only two observations where the company_location is in Russia and the average salary of the two employees add up to $157,000. Both these employees are in the executive level.

### Remote Ratio and Salary Distribution
"""

sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))


ax = sns.boxplot(x='remote_ratio', y='salary_in_usd', data=df, palette='tab20')

plt.xlabel("Remote Ratio")
plt.ylabel("Average Salary in USD")
plt.title("Average Salary by Remote Ratio")

plt.show()

"""From the box plots above, it is seen that the median salary is the highest among the Remote employees followed by On-site and then hybrid. This result may also be correlated based on the company location."""

